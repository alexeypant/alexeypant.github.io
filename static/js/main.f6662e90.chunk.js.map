{"version":3,"sources":["resources/jpeg/kupol-base.jpg","resources/jpeg/kupol-inside.jpeg","resources/jpeg/kupol-inside-wall-close.jpeg","resources/jpeg/kupol-outside-view.jpeg","resources/jpeg/kupol-outside-view-full.jpeg","resources/jpeg/kupol-outside-view-long.jpeg","resources/jpeg/kupol-top.jpeg","resources/jpeg/kupol-wall-internal.jpeg","resources/jpeg/kupol-wall-outside.jpeg","enums/ERoute.ts","components/footer/Footer.tsx","components/NoMatch/NoMatch.tsx","components/contacts/Contacts.tsx","components/grid/GridContainer.tsx","components/grid/GridRow.tsx","components/grid/GridColumn.tsx","components/Menu/AntMenu.tsx","components/examples/InstallationSteps.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ERoute","Footer","NoMatch","dataSource","key","type","value","columns","title","dataIndex","Contacts","pagination","GridContainer","children","className","GridRow","GridColumn","tabs","label","iconType","to","root","contacts","AntMenu","useState","selectedKey","setSelectedKey","mode","selectedKeys","onClick","e","map","tab","Item","examplesDetails","imgSource","basement","description","inside","insideWallClose","outsideView","outsideViewFull","outsideViewFar","top","wallInternal","wallOutside","InstallationSteps","style","background","padding","gutter","data","index","sm","md","lg","xl","bordered","cover","position","paddingTop","alt","src","right","bottom","left","maxHeight","width","margin","objectFit","App","exact","path","component","noMatch","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6662e90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kupol-base.7f07bf34.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kupol-inside.34995d3e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/kupol-inside-wall-close.b3955151.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/kupol-outside-view.576affcd.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/kupol-outside-view-full.a3483e0b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/kupol-outside-view-long.2f00d562.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/kupol-top.7b0fa67c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/kupol-wall-internal.d99d3ed1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/kupol-wall-outside.207a0673.jpeg\";","export enum ERoute {\n  root = '/',\n  delivery = '/delivery',\n  contacts = '/contacts',\n  callback = '/callback',\n  noMatch = '*',\n}\n","import React from 'react';\n\nexport const Footer = () => (\n    <div>\n\n    </div>\n);\n","import React from 'react';\n\nexport const NoMatch = () => (\n    <div>\n      страница в разработке\n    </div>\n);\n","import React from 'react';\nimport { Table } from 'antd';\n\nconst dataSource = [\n  { key: '1', type: 'Офис', value: 'СПб, пр. Науки, 17-6' },\n  { key: '2', type: 'Рекл. образец находится:', value: 'г. Всеволожск, ул. Минюшинская 13' },\n  { key: '3', type: 'Телефон для связи:', value: '+79006226991' },\n  { key: '4', type: 'E-mail:', value: 'sun-julia1@yandex.ru' },\n];\n\nconst columns = [\n  { title: 'Контактные данные', dataIndex: 'type', key: 'type' },\n  { title: 'Юлия', dataIndex: 'value', key: 'value' },\n];\n\nexport const Contacts = () => (<Table dataSource={dataSource} columns={columns} pagination={false}/>);\n","import React, { ReactElement } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ntype GridContainerProps = {\n  children: ReactElement | ReactElement[];\n};\n\nexport const GridContainer = ( { children }: GridContainerProps) => (\n    <div className=\"container\">\n      {children}\n    </div>\n);\n","import React, { ReactElement } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ntype GridRowProps = {\n  children: ReactElement | ReactElement[];\n};\n\nexport const GridRow = ({ children }: GridRowProps) => (\n    <div className=\"row\">\n      {children}\n    </div>\n);\n","import React, { ReactElement } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ntype GridColumnProps = {\n  children: ReactElement | ReactElement[];\n};\n\nexport const GridColumn = ({ children }: GridColumnProps) => (\n    <div className=\"col-sm\">\n      {children}\n    </div>\n);\n","import { Icon, Menu } from 'antd';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ERoute } from '../../enums/ERoute';\n\n\nconst tabs = [\n  { label: 'Этапы строительства', iconType: 'info-circle', key: 'about', to: ERoute.root },\n  // { label: 'Доставка', iconType: 'shopping-cart', key: 'delivery', to: ERoute.delivery},\n  // { label: 'Обратный звонок', iconType: 'phone', key: 'callback', to: ERoute.callback},\n  { label: 'Контакты', iconType: 'contacts', key: 'contacts', to: ERoute.contacts},\n];\n\nexport const AntMenu = () => {\n  const [selectedKey, setSelectedKey] = useState(tabs[0].key);\n  const handleClick = (e: any) => setSelectedKey(e.key);\n  return (\n    <Menu mode=\"horizontal\"  selectedKeys={[selectedKey]} onClick={handleClick}>\n      {tabs.map(tab => <Menu.Item key={tab.key}>\n        <Link to={tab.to}><Icon type={tab.iconType} />{tab.label}</Link>\n      </Menu.Item>)}\n    </Menu>)\n};\n\n","import { Card, Col, Row } from 'antd';\nimport React from 'react';\nimport Meta from 'antd/lib/card/Meta';\nimport basement from '../../resources/jpeg/kupol-base.jpg';\nimport inside from '../../resources/jpeg/kupol-inside.jpeg';\nimport insideWallClose from '../../resources/jpeg/kupol-inside-wall-close.jpeg';\nimport outsideView from '../../resources/jpeg/kupol-outside-view.jpeg';\nimport outsideViewFull from '../../resources/jpeg/kupol-outside-view-full.jpeg';\nimport outsideViewFar from '../../resources/jpeg/kupol-outside-view-long.jpeg';\nimport top from '../../resources/jpeg/kupol-top.jpeg';\nimport wallInternal from '../../resources/jpeg/kupol-wall-internal.jpeg';\nimport wallOutside from '../../resources/jpeg/kupol-wall-outside.jpeg';\n\nconst examplesDetails = [\n  {\n    imgSource: basement,\n    title: 'Основание',\n    description: '',\n  },\n  {\n    imgSource: inside,\n    title: 'Изнутри',\n    description: '',\n  },\n  {\n    imgSource: insideWallClose,\n    title: 'Секция стены',\n    description: '',\n  },\n  {\n    imgSource: outsideView,\n    title: 'Вид снаружи',\n    description: '',\n  },\n  {\n    imgSource: outsideViewFull,\n    title: 'Вид снаружи полностью',\n    description: '',\n  },\n  {\n    imgSource: outsideViewFar,\n    title: 'Вид издалека',\n    description: '',\n  },\n  {\n    imgSource: top,\n    title: 'Свод',\n    description: '',\n  },\n  {\n    imgSource: wallInternal,\n    title: 'Стена изнутри',\n    description: '',\n  },\n  {\n    imgSource: wallOutside,\n    title: 'Стена снаружи',\n    description: '',\n  },\n];\n\nexport const InstallationSteps = () => (\n    <div style={{ background: '#ECECEC', padding: '16px' }}>\n      <Row gutter={[16, 16]}>\n        {examplesDetails.map((data, index) => (\n          <Col sm={32} md={24} lg={16} xl={8} key={index}>\n            <Card bordered={false}\n              cover={<div style={{ position: 'relative', paddingTop: '80%' }}>\n                <img alt={data.title} src={data.imgSource} style={{     position: 'absolute',\n                  top: '4px',\n                  right: 0,\n                  bottom: 0,\n                  left: 0,\n\n                  maxHeight: '100%',\n                  width: '100%',\n                  margin: 'auto', objectFit: 'cover' }} />\n              </div>}\n            >\n              <Meta title={data.title} description={data.description} />\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </div>\n);\n","import React from 'react';\nimport { Footer } from './components/footer/Footer';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { ERoute } from './enums/ERoute';\nimport { NoMatch } from './components/NoMatch/NoMatch';\nimport { Contacts } from './components/contacts/Contacts';\nimport { GridContainer } from './components/grid/GridContainer';\nimport { GridRow } from './components/grid/GridRow';\nimport { GridColumn } from './components/grid/GridColumn';\nimport { AntMenu } from './components/Menu/AntMenu';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { InstallationSteps } from './components/examples/InstallationSteps';\n\nconst App: React.FC = () => (\n    <GridContainer>\n      <Router>\n        <GridRow>\n          <GridColumn>\n            <AntMenu />\n          </GridColumn>\n        </GridRow>\n        <GridRow>\n          <GridColumn>\n            <Switch>\n              <Route exact={true} path={ERoute.root} component={InstallationSteps}/>\n              <Route exact={true} path={ERoute.contacts} component={Contacts}/>\n              {/*<Route exact={true} path={ERoute.callback} component={CallbackFormContainer}/>*/}\n              <Route path={ERoute.noMatch} component={NoMatch}/>\n            </Switch>\n          </GridColumn>\n        </GridRow>\n        <GridRow>\n          <GridColumn>\n            <Footer/>\n          </GridColumn>\n        </GridRow>\n      </Router>\n    </GridContainer>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}